interface Node {
  id: ID!
}

type Query {
  articles: [Article!]!
  article(title: String!): Article
  node(id: ID!): Node
}

type Article implements Node {
  id: ID!
  title: String!
  body: String!
}

type Mutation {
  addArticle(input: AddArticleInput!): AddArticlePayload
  updateArticle(input: UpdateArticleInput!): UpdateArticlePayload
  deleteArticle(input: DeleteArticleInput!): DeleteArticlePayload
}

input AddArticleInput {
  title: String!
  body: String!
}

type AddArticlePayload {
  article: Article
}

input UpdateArticleInput {
  id: ID!
  title: String!
  body: String!
}

type UpdateArticlePayload {
  article: Article
}

input DeleteArticleInput {
  id: ID!
}

type DeleteArticlePayload {
  deletedId: ID!
}
